# Infra for Hatchet: https://docs.hatchet.run/self-hosting/docker-compose
services:
  postgres:
    image: postgres:15.6
    command: postgres -c 'max_connections=1000'
    hostname: "postgres"
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-hatchet}
      - POSTGRES_PASSWORD=${SERVICE_PASSWORD_POSTGRES}
      - POSTGRES_DB=${POSTGRES_DB:-hatchet}
    volumes:
      - hatchet_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d hatchet -U hatchet"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
  rabbitmq:
    image: "rabbitmq:3-management"
    hostname: "rabbitmq"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER:-user}
      - RABBITMQ_DEFAULT_PASS=${SERVICE_PASSWORD_RABBITMQ}
      - SERVICE_FQDN_RABBITMQ_5672
      - SERVICE_FQDN_RABBITMQ_15672
      - SERVICE_FQDN_RABBITMQ
      - RABBITMQ_URL=${SERVICE_FQDN_RABBITMQ}
    volumes:
      - "hatchet_rabbitmq_data:/var/lib/rabbitmq"
      - "hatchet_rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf" # Configuration file mount
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 10s
      retries: 5
  migration:
    image: ghcr.io/hatchet-dev/hatchet/hatchet-migrate:latest
    command: /hatchet/hatchet-migrate
    restart: no
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${SERVICE_PASSWORD_POSTGRES}@postgres:5432/${POSTGRES_DB}
    depends_on:
      postgres:
        condition: service_healthy
  setup-config:
    image: ghcr.io/hatchet-dev/hatchet/hatchet-admin:latest
    command: /hatchet/hatchet-admin quickstart --skip certs --generated-config-dir /hatchet/config --overwrite=false
    restart: no
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${SERVICE_PASSWORD_POSTGRES}@postgres:5432/${POSTGRES_DB}
      - SERVER_TASKQUEUE_RABBITMQ_URL=amqp://${RABBITMQ_DEFAULT_USER}:${SERVICE_PASSWORD_RABBITMQ}@rabbitmq:5672/
      # Using FQDN for cookie domain when deployed in Coolify
      - SERVER_AUTH_COOKIE_DOMAIN=${SERVICE_FQDN_HATCHET_DASHBOARD:-hatchet-dashboard:80}
      - SERVER_AUTH_COOKIE_INSECURE=${SERVER_AUTH_COOKIE_INSECURE:-t}
      - SERVER_GRPC_BIND_ADDRESS=${SERVER_GRPC_BIND_ADDRESS:-0.0.0.0}
      - SERVER_GRPC_INSECURE=${SERVER_GRPC_INSECURE:-t}
      - SERVER_GRPC_BROADCAST_ADDRESS=${SERVER_GRPC_BROADCAST_ADDRESS:-hatchet-engine:7070}
      - SERVER_DEFAULT_ENGINE_VERSION=${SERVER_DEFAULT_ENGINE_VERSION:-V1}
      - SERVER_INTERNAL_CLIENT_INTERNAL_GRPC_BROADCAST_ADDRESS=${SERVER_INTERNAL_CLIENT_INTERNAL_GRPC_BROADCAST_ADDRESS:-hatchet-engine:7070}
    volumes:
      - hatchet_certs:/hatchet/certs
      - hatchet_config:/hatchet/config
    depends_on:
      migration:
        condition: service_completed_successfully
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
  hatchet-engine:
    image: ghcr.io/hatchet-dev/hatchet/hatchet-engine:latest
    command: /hatchet/hatchet-engine --config /hatchet/config
    depends_on:
      setup-config:
        condition: service_completed_successfully
      migration:
        condition: service_completed_successfully
    ports:
      - "7077:7070"
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${SERVICE_PASSWORD_POSTGRES}@postgres:5432/${POSTGRES_DB}
      - SERVER_GRPC_BIND_ADDRESS=${SERVER_GRPC_BIND_ADDRESS:-0.0.0.0}
      - SERVER_GRPC_INSECURE=${SERVER_GRPC_INSECURE:-t}
      - SERVICE_FQDN_HATCHET_ENGINE_7070
      - SERVICE_FQDN_HATCHET_ENGINE
      - HATCHET_ENGINE_URL=${SERVICE_FQDN_HATCHET_ENGINE}
    volumes:
      - hatchet_certs:/hatchet/certs
      - hatchet_config:/hatchet/config
  hatchet-dashboard:
    image: ghcr.io/hatchet-dev/hatchet/hatchet-dashboard:latest
    command: sh ./entrypoint.sh --config /hatchet/config
    depends_on:
      setup-config:
        condition: service_completed_successfully
      migration:
        condition: service_completed_successfully
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${SERVICE_PASSWORD_POSTGRES}@postgres:5432/${POSTGRES_DB}
      - SERVER_GRPC_BIND_ADDRESS=${SERVER_GRPC_BIND_ADDRESS}
      - SERVER_GRPC_BROADCAST_ADDRESS=${SERVER_GRPC_BROADCAST_ADDRESS}
      - SERVICE_FQDN_HATCHET_DASHBOARD_80
      - SERVICE_FQDN_HATCHET_DASHBOARD
      - HATCHET_DASHBOARD_URL=${SERVICE_FQDN_HATCHET_DASHBOARD}
      - SERVER_URL=${SERVICE_FQDN_HATCHET_DASHBOARD}
      # Default credentials are "admin@example.com" and "Admin123!!"
    volumes:
      - hatchet_certs:/hatchet/certs
      - hatchet_config:/hatchet/config
  hatchet-worker-example:
    env_file:
      - .env
    build: .
    environment:
      HATCHET_CLIENT_TOKEN: ${HATCHET_CLIENT_TOKEN}
      HATCHET_CLIENT_TLS_STRATEGY: ${HATCHET_CLIENT_TLS_STRATEGY-none}

volumes:
  hatchet_postgres_data:
  hatchet_rabbitmq_data:
  hatchet_rabbitmq.conf:
  hatchet_config:
  hatchet_certs:
